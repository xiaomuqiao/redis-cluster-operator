language: go
go_import_path: gocloud.dev

services:
  - docker

before_install:
  - "df -k"
  # The Bash that comes with OS X is ancient.
  # grep is similar: it's not GNU grep, which means commands aren't portable.
  # Homebrew installs grep as ggrep if you don't build from source, so it needs
  # moving so it takes precedence in the PATH.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      HOMEBREW_NO_AUTO_UPDATE=1 brew install bash grep;
      mv $(brew --prefix)/bin/ggrep $(brew --prefix)/bin/grep;
    fi

install:
  # Re-checkout files preserving line feeds. This prevents Windows builds from
  # converting \n to \r\n.
  - "git config --global core.autocrlf input"
  - "git checkout -- ."

script:
  - 'internal/testing/runchecks.sh'

env:
  global:
  - GOPROXY=https://proxy.golang.org
  - GO111MODULE=on

# When updating Go versions:
# In addition to changing the "go:" versions below, edit the version
# test in runchecks.sh.

jobs:
  include:
    - go: "1.11.x"
      os: linux
      if: branch = master AND type = push
    - go: "1.12.x"
      os: linux
    - go: "1.12.x"
      os: osx
    - go: "1.12.x"
      os: windows
      # Only run Windows build job on master; it's very slow.
      if: branch = master AND type = push
      # TODO(rvangent): Remove filter_secrets: false once the Travis issue is fixed:
      # https://travis-ci.community/t/current-known-issues-please-read-this-before-posting-a-new-topic/264/10
      filter_secrets: false
    # Deploy to GitHub Pages.
    - stage: website
      os: linux
      install: "curl -fsSL https://github.com/gohugoio/hugo/releases/download/v0.54.0/hugo_0.54.0_Linux-64bit.tar.gz | tar zxf - -C \"$HOME\" hugo"
      script: "HUGO_GOOGLEANALYTICS=UA-135118641-1 \"$HOME/hugo\" -s internal/website"
      deploy:
        provider: pages
        fqdn: gocloud.dev
        skip-cleanup: true
        local-dir: internal/website/public
        github-token: $GITHUB_TOKEN  # set in the Settings page of the repo
        keep-history: true
        verbose: true  # temporarily, while verifying
        on:
          branch: master

stages:
  - name: website
    if: branch = master AND type = push
  - test
